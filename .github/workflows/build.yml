# This workflow performs a static analysis of your Kotlin source code using
# Detekt.
#
# Scans are triggered:
# 1. On every push to default and protected branches
# 2. On every Pull Request targeting the default branch
# 3. Manually, on demand, via the "workflow_dispatch" event

name: Build with Gradle

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scan"
  scan:
    name: Scan
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Setup JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          java-version: 17
          distribution: 'oracle'

      - name: Cache
        uses: actions/cache@v3.3.2
        with:
          path: ~/${{ env.WORKING_DIR }}/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        working-directory: ${{ env.WORKING_DIR }}
        run: ./gradlew build